
---
- name: Test aos_blueprint module
  hosts: aos-server
  connection: local
  gather_facts: no
  vars:
    session_wrong_token:
      server: "{{address}}"
      port: "{{port}}"
      token: "WRONGTOKEN"
  pre_tasks:
    - include_vars: "resources/blueprint_params.yml"

  tasks:
#-------------------------------------------------------
# TESTS 000 - Open Session
#-------------------------------------------------------
    - name: Open Session on AOS Server
      uri:
        url: "http://{{address}}:{{port}}/api/user/login"
        method: POST
        status_code: 201
        HEADER_Content-Type: 'application/json'
        HEADER_Accept: 'application/json'
        body: >
          {
            "username": "{{username}}",
            "password": "{{password}}"
          }
        body_format: json
      register: session

    - name: Format token into session_ok variable
      set_fact:
        session_ok:
          server: "{{address}}"
          port: "{{port}}"
          token: "{{session.json.token}}"

#-------------------------------------------------------
# TESTS 100 - Wrong Inputs
#-------------------------------------------------------
    - name: "TEST 101 - Session is mandatory"
      aos_blueprint_param:
        blueprint: "my-blueprint"
        state: present
      register: test
      ignore_errors: True
      tags: [ negative, param ]

    - name: Check TEST 101
      assert:
        that:
          - test|failed
          - "test.msg.find('missing required arguments') != -1"
      tags: [ negative, param ]

#-------------------------------------------------------
    - name: "TEST 103 - Session is a dict"
      aos_blueprint_param:
        session: "my-session"
        blueprint: "my-blueprint"
        name: "name"
        value:
          value: true
        state: present
      register: test
      ignore_errors: True
      tags: [ negative, param ]

    - name: Check TEST 103
      assert:
        that:
          - test|failed
          - "test.msg.find('argument session is of type') != -1"
      tags: [ negative, param ]
#-------------------------------------------------------
    - name: "TEST 104 - Session is not valid"
      aos_blueprint_param:
        session: "{{ session_wrong_token }}"
        blueprint: "my-blueprint"
        name: "name"
        value:
          value: true
        state: present
      register: test
      ignore_errors: True
      tags: [ negative, param ]

    # - debug: var=test
    - name: Check TEST 104
      assert:
        that:
          - test|failed
          - "test.msg.find('Unable to login to the AOS server') != -1"
      tags: [ negative, param ]
#-------------------------------------------------------
# TESTS 200 - Valid Inputs
#-------------------------------------------------------


    - name: TEST 200 - Get list of available parameters
      aos_blueprint_param:
        session: "{{session_ok}}"
        blueprint: "my-blueprint-l2"
        get_param_list: true
      register: test
      ignore_errors: True

    - debug: var=test

    - name: Check TEST 200
      assert:
        that:
          - test|success
          - not test|changed
          - test|params_list

    # - name: Configuring blueprint parameters
    #   aos_blueprint_param:
    #     session: "{{session_ok}}"
    #     blueprint: "my-blueprint-l2"
    #     name: "{{ item.key }}"
    #     value: "{{ item.value }}"
    #     param_map: "{{ blueprint_params_maps.get(item.key) | to_json }}"
    #   with_dict: "{{blueprint_params}}"

        #
#     - name: "SETUP 200 - Cleanup existing server"
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         state: absent
#       register: test
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 200
#       assert:
#         that:
#           - test|success
#       tags: [ json ]
# #-------------------------------------------------------
#     - name: "SETUP 201 - Create Blueprint, check mode 1/2"
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         template: "my-servers"
#         reference_arch: "two_stage_l3clos"
#         state: present
#       register: test
#       check_mode: yes
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 201
#       assert:
#         that:
#           - test|success
#           - test|changed
#       tags: [ input ]
# #-------------------------------------------------------
#     - name: "SETUP 202 - Create Blueprint, check mode 2/2"
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         template: "my-servers"
#         reference_arch: "two_stage_l3clos"
#         state: present
#       register: test
#       check_mode: yes
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 202
#       assert:
#         that:
#           - test|success
#           - test|changed
#       tags: [ input ]
# #-------------------------------------------------------
#     - name: "SETUP 203 - Create Blueprint "
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         template: "my-servers"
#         reference_arch: "two_stage_l3clos"
#         state: present
#       register: test
#       check_mode: no
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 203
#       assert:
#         that:
#           - test|success
#           - test|changed
#       tags: [ input ]
# #-------------------------------------------------------
#     - name: "SETUP 204 - Create Blueprint when exist"
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         template: "my-servers"
#         reference_arch: "two_stage_l3clos"
#         state: present
#       register: test
#       check_mode: no
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 204
#       assert:
#         that:
#           - test|success
#           - not test|changed
#       tags: [ input ]
# #-------------------------------------------------------
#     - name: "SETUP 205 - Delete Blueprint, check mode 1/2"
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         template: "my-servers"
#         reference_arch: "two_stage_l3clos"
#         state: absent
#       register: test
#       check_mode: yes
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 205
#       assert:
#         that:
#           - test|success
#           - test|changed
#       tags: [ input ]
# #-------------------------------------------------------
#     - name: "SETUP 206 - Delete Blueprint, check mode 2/2"
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         template: "my-servers"
#         reference_arch: "two_stage_l3clos"
#         state: absent
#       register: test
#       check_mode: yes
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 206
#       assert:
#         that:
#           - test|success
#           - test|changed
#       tags: [ input ]
# #-------------------------------------------------------
#     - name: "SETUP 207 - Delete Blueprint"
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         state: absent
#       register: test
#       check_mode: no
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 207
#       assert:
#         that:
#           - test|success
#           - test|changed
#       tags: [ input ]
# #-------------------------------------------------------
#     - name: "SETUP 208 - Delete Blueprint with exist"
#       aos_blueprint_param:
#         session: "{{ session_ok }}"
#         name: "my-blueprint"
#         state: absent
#       register: test
#       check_mode: no
#       ignore_errors: True
#       tags: [ input ]
#
#     - name: Check TEST 208
#       assert:
#         that:
#           - test|success
#           - not test|changed
#       tags: [ input ]
# #-------------------------------------------------------
